{"version":3,"sources":["Redux/types.js","components/Layout/Layout.js","components/Days/Day/Temp/Temperature.js","components/Days/Day/WeatherImage/WeatherImage.js","components/Days/Day/Day.js","components/Days/Days.js","default-axios-instance.js","Redux/Actions/weatherAction.js","Containers/SweaterPage.js","App.js","reportWebVitals.js","Redux/Reducers/counterReducer.js","Redux/Reducers/weatherReducer.js","Redux/Reducers/rootReducer.js","Redux/store.js","utils/localStorage.js","index.js"],"names":["GET_WEATHER","FLIP_SCALE","SET_LOCATION","GET_HOURLY","SET_LOCALSTATE","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","Layout","props","scaleFarenheight","useSelector","state","weatherReducer","scaleCelcius","dispatch","useDispatch","classes","useTheme","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","style","flex","component","Grid","container","item","Switch","label","value","checked","onChange","type","Drawer","paper","direction","Divider","List","map","text","index","ListItem","button","height","title","ListItemIcon","ListItemText","primary","children","Temperature","highFaren","conversion","highTemp","lowFaren","lowTemp","scale","WeatherImage","src","weatherImgCode","alt","DayWrapper","styled","div","celciusToFarenheight","celTemp","toFixed","Day","date","DaysWrapper","Days","days","fiveDayWeather","day","datetime","dayDescription","weather","description","low_temp","high_temp","icon","axios","baseURL","getWeather","latitude","longitude","a","api","get","process","REACT_APP_WEATHER_API","res","hourly","data","hourlyData","resData","payload","console","error","SweaterPage","location","weekWeather","weekly","useEffect","navigator","geolocation","getCurrentPosition","pos","crd","coords","err","warn","code","message","enableHighAccuracy","getFiveDayForcast","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","count","temperature","farenheight","low","high","celcius","log","counterReducer","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","thunk","store","createStore","rootReducer","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a5855de.chunk.js","sourcesContent":["export const GET_WEATHER = 'GET_WEATHER';\nexport const FLIP_SCALE = 'FLIP_SCALE';\nexport const SET_LOCATION = 'SET_LOCATION';\nexport const GET_HOURLY = 'GET_HOURLY';\nexport const SET_LOCALSTATE = 'SET_LOCALSTATE';\n","import { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport CalendarTodayTwoToneIcon from '@material-ui/icons/CalendarTodayTwoTone';\nimport CloudTwoToneIcon from '@material-ui/icons/CloudTwoTone';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FLIP_SCALE } from '../../Redux/types';\n\n// This is the layout page for the app, it is imported from app.js and wraps the whole site\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t},\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t},\n\tappBarShift: {\n\t\tmarginLeft: drawerWidth,\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\tmenuButton: {\n\t\tmarginRight: 36,\n\t},\n\thide: {\n\t\tdisplay: 'none',\n\t},\n\tdrawer: {\n\t\twidth: drawerWidth,\n\t\tflexShrink: 0,\n\t\twhiteSpace: 'nowrap',\n\t},\n\tdrawerOpen: {\n\t\twidth: drawerWidth,\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\tdrawerClose: {\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t\toverflowX: 'hidden',\n\t\twidth: theme.spacing(7) + 1,\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: theme.spacing(9) + 1,\n\t\t},\n\t},\n\ttoolbar: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-end',\n\t\tpadding: theme.spacing(0, 1),\n\t\t// necessary for content to be below app bar\n\t\t...theme.mixins.toolbar,\n\t},\n\tcontent: {\n\t\tflexGrow: 1,\n\t\tpadding: theme.spacing(3),\n\t},\n}));\n\nexport default function Layout(props) {\n\tconst scaleFarenheight = useSelector(\n\t\tstate => state.weatherReducer.scaleCelcius\n\t);\n\tconst dispatch = useDispatch();\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleDrawerOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleDrawerClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar\n\t\t\t\tposition='fixed'\n\t\t\t\tclassName={clsx(classes.appBar, {\n\t\t\t\t\t[classes.appBarShift]: open,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\taria-label='open drawer'\n\t\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\t\tedge='start'\n\t\t\t\t\t\tclassName={clsx(classes.menuButton, {\n\t\t\t\t\t\t\t[classes.hide]: open,\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant='h6' noWrap style={{ flex: 1 }}>\n\t\t\t\t\t\tSweater Weather!\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component='div'>\n\t\t\t\t\t\t<Grid component='label' container alignItems='center' spacing={1}>\n\t\t\t\t\t\t\t<Grid item>°F</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\t\tlabel='start'\n\t\t\t\t\t\t\t\t\tvalue='start'\n\t\t\t\t\t\t\t\t\tchecked={scaleFarenheight}\n\t\t\t\t\t\t\t\t\tonChange={() => dispatch({ type: FLIP_SCALE })}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>°C</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Drawer\n\t\t\t\tvariant='permanent'\n\t\t\t\tclassName={clsx(classes.drawer, {\n\t\t\t\t\t[classes.drawerOpen]: open,\n\t\t\t\t\t[classes.drawerClose]: !open,\n\t\t\t\t})}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: clsx({\n\t\t\t\t\t\t[classes.drawerOpen]: open,\n\t\t\t\t\t\t[classes.drawerClose]: !open,\n\t\t\t\t\t}),\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className={classes.toolbar}>\n\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\n\t\t\t\t\t\t{theme.direction === 'rtl' ? (\n\t\t\t\t\t\t\t<ChevronRightIcon />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<ChevronLeftIcon />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t\t<Divider />\n\t\t\t\t<List>\n\t\t\t\t\t{['Weather', 'Calendar'].map((text, index) => (\n\t\t\t\t\t\t<ListItem button key={text} style={{ height: '45vh' }} title={text}>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t{index % 2 === 0 ? (\n\t\t\t\t\t\t\t\t\t<CloudTwoToneIcon />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<CalendarTodayTwoToneIcon />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={text} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t\t<Divider />\n\t\t\t</Drawer>\n\t\t\t<main>{props.children}</main>\n\t\t</div>\n\t);\n}\n","import { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nconst Temperature = props => {\n\tlet scaleCelcius = useSelector(state => state.weatherReducer.scaleCelcius);\n\tlet highFaren = props.conversion(props.highTemp);\n\tlet lowFaren = props.conversion(props.lowTemp);\n\tlet scale = scaleCelcius ? 'C' : 'F';\n\n\tlet clothingChoice = () => {\n\t\tif (lowFaren <= 55) {\n\t\t\treturn <p> WEAR A COAT 🧥 </p>;\n\t\t} else if (lowFaren <= 65 && lowFaren > 55) {\n\t\t\treturn <p> ITS SWEATER WEATHER 🍂 </p>;\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\tHIGH: {scaleCelcius ? props.highTemp : highFaren}°{scale} <br />\n\t\t\t\tLOW: {scaleCelcius ? props.lowTemp : lowFaren}°{scale}\n\t\t\t</div>\n\t\t\t{clothingChoice()}\n\t\t</>\n\t);\n};\n\nexport default Temperature;\n","import React from 'react';\n\nconst WeatherImage = props => {\n\treturn (\n\t\t<>\n\t\t\t<img\n\t\t\t\tsrc={`https://www.weatherbit.io/static/img/icons/${props.weatherImgCode}.png`}\n\t\t\t\talt='weatherImage'\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default WeatherImage;\n","//Libs\nimport React from 'react';\nimport styled from 'styled-components';\n\n//Components\nimport Temperature from './Temp/Temperature';\nimport WeatherImage from './WeatherImage/WeatherImage';\n\n//Redux\n\nconst DayWrapper = styled.div`\n\tflex: 1;\n\tbackground-color: rgba(245, 245, 245, 0.65);\n\tborder-radius: 90px;\n\tmargin: 0 15px;\n\tpadding: 10px 50px;\n\ttransition: 0.3s all ease;\n\tbox-shadow: 0 1px 4px rgba(0, 0, 0, 0.3),\n\t\t0 0 40px rgba(128, 128, 128, 0.1) inset;\n\n\t&.temp {\n\t\tline-height: 60px;\n\t\tbackground-color: brown;\n\t\tcolor: brown;\n\t}\n\n\t&:hover {\n\t\tcursor: pointer;\n\t\tbox-shadow: 9px 7px 40px -6px rgba(0, 0, 0, 0.25);\n\t}\n`;\n\nconst celciusToFarenheight = celTemp => {\n\tlet farenheight = celTemp * 1.8 + 32;\n\treturn farenheight.toFixed();\n};\n\nconst Day = props => {\n\treturn (\n\t\t<DayWrapper>\n\t\t\t<WeatherImage weatherImgCode={props.weatherImgCode} />\n\t\t\t{props.date}\n\t\t\t<Temperature\n\t\t\t\tconversion={celciusToFarenheight}\n\t\t\t\tlowTemp={props.lowTemp}\n\t\t\t\thighTemp={props.highTemp}\n\t\t\t/>\n\t\t</DayWrapper>\n\t);\n};\n\nexport default Day;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Day from './Day/Day';\n\n// Takes in day and creates multiple based on the weather data being passed to it.\n\nconst LayoutDiv = styled.div`\n\theight: 100vh;\n\tbackground: linear-gradient(\n\t\t130deg,\n\t\t#83c7dd 20%,\n\t\trgb(50, 182, 226) 50%,\n\t\trgb(31, 157, 199) 100%\n\t);\n`;\n\nconst DaysWrapper = styled.div`\n\t/* Mobile devices & base */\n\tdisplay: flex;\n\tflex-flow: column-reverse;\n\tbackground: transparent;\n\theight: 100px;\n\talign-items: center;\n\twidth: 100%;\n\tmargin: auto;\n\toverflow: scroll;\n\ttext-align: center;\n\t/* font-weight: bold; */\n\tfont-size: 1.2rem;\n\n\t/* if the device is a desktop -> */\n\n\t@media (min-width: 500px) {\n\t\tbackground: linear-gradient(\n\t\t\t130deg,\n\t\t\t#83c7dd 20%,\n\t\t\trgb(50, 182, 226) 50%,\n\t\t\trgb(31, 157, 199) 100%\n\t\t);\n\t\theight: 110vh;\n\t\tflex: 1;\n\t\tflex-flow: row;\n\t\tjustify-content: center;\n\t\t/* background-color: rgb(173, 216, 230); */\n\t}\n`;\n\nconst HourlyWrapper = styled.div`\n\tdisplay: flex;\n\n\theight: 50vh;\n`;\n\nconst Days = props => {\n\tlet days;\n\n\tif (props.fiveDayWeather) {\n\t\tdays = props.fiveDayWeather.map(day => {\n\t\t\treturn (\n\t\t\t\t<Day\n\t\t\t\t\tkey={day.datetime}\n\t\t\t\t\tdate={day.datetime}\n\t\t\t\t\tdayDescription={day.weather.description}\n\t\t\t\t\tlowTemp={day.low_temp}\n\t\t\t\t\thighTemp={day.high_temp}\n\t\t\t\t\tweatherImgCode={day.weather.icon}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t}\n\n\treturn (\n\t\t<DaysWrapper>\n\t\t\t{days} <br />\n\t\t</DaysWrapper>\n\t);\n};\n\nexport default Days;\n","import axios from 'axios';\nexport default axios.create({\n\tbaseURL: 'https://api.weatherbit.io/v2.0/forecast',\n});\n","import api from '../../default-axios-instance';\nimport { GET_WEATHER, FLIP_SCALE, GET_HOURLY } from '../types';\n\nexport const getWeather = (latitude, longitude) => {\n\treturn async dispatch => {\n\t\ttry {\n\t\t\tconst res = await api.get(\n\t\t\t\t`daily?days=5&lat=${latitude}&lon=${longitude}&key=${process.env.REACT_APP_WEATHER_API}`\n\t\t\t\t// `daily?days=5&city=${city}&key=${process.env.REACT_APP_WEATHER_API}`\n\t\t\t);\n\n\t\t\tconst hourly = await api.get(\n\t\t\t\t`hourly?hours=12&lat=${latitude}&lon=${longitude}&key=${process.env.REACT_APP_WEATHER_API}`\n\t\t\t);\n\n\t\t\tconst hourlyData = await hourly.data.data;\n\t\t\tconst resData = await res.data.data;\n\n\t\t\tdispatch({\n\t\t\t\ttype: GET_WEATHER,\n\t\t\t\tpayload: resData,\n\t\t\t});\n\n\t\t\tdispatch({\n\t\t\t\ttype: GET_HOURLY,\n\t\t\t\tpayload: hourlyData,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n};\n\nexport const flipScale = () => {\n\treturn {\n\t\ttype: FLIP_SCALE,\n\t};\n};\n","//libs\nimport React, { useEffect } from 'react';\n\n//components\nimport Days from '../components/Days/Days';\n\n//redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getWeather } from '../Redux/Actions/weatherAction';\n\n// The Sweater page takes in components from days and uses it to display date, weather and sweater status\n\nconst SweaterPage = () => {\n\tconst dispatch = useDispatch();\n\tconst location = useSelector(state => state.weatherReducer.location);\n\tconst weekWeather = useSelector(state => state.weatherReducer.weekly);\n\n\t// i want to create something that takes in redux state and sets it to localstorage in order to populate the website faster.\n\n\t//\n\n\t// Get current latitude and longitude. Sets location state\n\tuseEffect(() => {\n\t\tlet options = {\n\t\t\tenableHighAccuracy: true,\n\t\t};\n\t\tlet success = pos => {\n\t\t\tconst crd = pos.coords;\n\t\t\tlet payload = {\n\t\t\t\tlatitude: crd.latitude.toFixed(0),\n\t\t\t\tlongitude: crd.longitude.toFixed(0),\n\t\t\t};\n\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_LOCATION',\n\t\t\t\tpayload,\n\t\t\t});\n\t\t};\n\t\tfunction error(err) {\n\t\t\tconsole.warn(`ERROR(${err.code}): ${err.message}`);\n\t\t}\n\n\t\tnavigator.geolocation.getCurrentPosition(success, error, options);\n\t}, [dispatch]);\n\n\t// ping api for weather data based on current location. Sets weather state\n\tuseEffect(() => {\n\t\tconst getFiveDayForcast = async location => {\n\t\t\tconst { latitude, longitude } = location;\n\t\t\tdispatch(getWeather(latitude, longitude));\n\t\t};\n\t\tif (location.latitude === '') {\n\t\t\treturn;\n\t\t} else {\n\t\t\tgetFiveDayForcast(location);\n\t\t}\n\t}, [location, dispatch]);\n\n\treturn (\n\t\t<>\n\t\t\t<Days fiveDayWeather={weekWeather} />\n\t\t</>\n\t);\n};\n\nexport default SweaterPage;\n","import Layout from './components/Layout/Layout';\n// import SideDrawer from './components/Layout/SideDrawer';\nimport SweaterPage from './Containers/SweaterPage';\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<Layout>\n\t\t\t\t<SweaterPage />\n\t\t\t</Layout>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n\tindex: null,\n\tcount: 0,\n};\n\nconst counterReducer = (state = initialState, { type, payload, index }) => {\n\tswitch (type) {\n\t\tcase 'INCREMENT_ONE':\n\t\t\tconsole.log(index);\n\n\t\t\treturn { ...state, count: state.count + 1, index: index };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default counterReducer;\n","import {\n\tGET_WEATHER,\n\tFLIP_SCALE,\n\tSET_LOCATION,\n\tGET_HOURLY,\n\tSET_LOCALSTATE,\n} from '../types';\n\nlet initialState = {\n\tlocation: { latitude: '', longitude: '' },\n\tweekly: null,\n\thourly: null,\n\ttemperature: {\n\t\tfarenheight: { low: 0, high: 0 },\n\t\tcelcius: { low: 0, high: 0 },\n\t},\n\tscaleCelcius: false,\n};\n\nconst weatherReducer = (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\t\tcase SET_LOCATION:\n\t\t\treturn { ...state, location: payload };\n\t\tcase GET_WEATHER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tweekly: payload,\n\t\t\t};\n\t\tcase FLIP_SCALE:\n\t\t\treturn { ...state, scaleCelcius: !state.scaleCelcius };\n\t\tcase GET_HOURLY:\n\t\t\treturn { ...state, hourly: payload };\n\t\tcase SET_LOCALSTATE:\n\t\t\tconsole.log(payload);\n\t\t\treturn { ...state, payload };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default weatherReducer;\n","import { combineReducers } from 'redux';\nimport counterReducer from './counterReducer';\nimport weatherReducer from './weatherReducer';\n// import userReducer from './userReducer';\n// import userReducer from './userReducer';\n// import each reducer and set them as their own state.\n\n// using the name of the reducer to seperate state containers\nconst state = {\n\tweatherReducer: weatherReducer,\n\tcounterReducer: counterReducer,\n};\n\nexport default combineReducers(state);\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers/rootReducer';\nimport { loadState } from '../utils/localStorage';\n\nconst persistedState = loadState();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleware = applyMiddleware(thunk);\n\nlet store = createStore(\n\trootReducer,\n\tpersistedState,\n\tcomposeEnhancers(middleware)\n);\n\nexport default store;\n","export const loadState = () => {\n\ttry {\n\t\tconst serializedState = localStorage.getItem('state');\n\t\tif (serializedState === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn JSON.parse(serializedState);\n\t} catch (err) {\n\t\treturn undefined;\n\t}\n};\n\nexport const saveState = state => {\n\ttry {\n\t\tconst serializedState = JSON.stringify(state);\n\n\t\tlocalStorage.setItem('state', serializedState);\n\t} catch {\n\t\t// ignore write errors\n\t}\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\nimport { saveState } from './utils/localStorage';\nimport throttle from 'lodash/throttle';\n\nstore.subscribe(\n\tthrottle(() => {\n\t\tsaveState(store.getState());\n\t}, 60000)\n);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t\t,\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}